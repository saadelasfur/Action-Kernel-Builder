#!/sbin/sh
#
# Coded by BlackMesa123 @XDAdevelopers
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#	  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Shell Script EDIFY Replacement: Recovery Flashable Zip
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";
TMPDIR="/cache/mesa";

BOOTMODE=false
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true

abort() { ui_print "$@"; exit 1; }

is_mounted() { mount | grep -q " $1 "; }

package_extract_dir() {
  local entry outfile;
  for entry in $(unzip -l "$ZIPFILE" 2>/dev/null | tail -n+4 | grep -v '/$' | grep -o " $1.*$" | cut -c2-); do
    outfile="$(echo "$entry" | sed "s|${1}|${2}|")";
    mkdir -p "$(dirname "$outfile")";
    unzip -o "$ZIPFILE" "$entry" -p > "$outfile";
  done;
}

set_metadata() {
  local file i;
  file="$1";
  shift;
  while [ "$2" ]; do
    case $1 in
      uid) chown $2 "$file";;
      gid) chown :$2 "$file";;
      mode) chmod $2 "$file";;
      selabel)
        for i in /system/bin/toybox /system/toolbox /system/bin/toolbox; do
          (LD_LIBRARY_PATH=/system/lib64 $i chcon -h $2 "$file" || LD_LIBRARY_PATH=/system/lib64 $i chcon $2 "$file") 2>/dev/null;
        done || chcon -h $2 "$file" || chcon $2 "$file";
      ;;
      *) ;;
    esac;
    shift 2;
  done;
}

set_metadata_recursive() {
  local dir i;
  dir="$1";
  shift;
  while [ "$2" ]; do
    case $1 in
      uid) chown -R $2 "$dir";;
      gid) chown -R :$2 "$dir";;
      dmode) find "$dir" -type d -exec chmod $2 {} +;;
      fmode) find "$dir" -type f -exec chmod $2 {} +;;
      selabel)
        for i in /system/bin/toybox /system/toolbox /system/bin/toolbox; do
          (find "$dir" -exec LD_LIBRARY_PATH=/system/lib64 $i chcon -h $2 {} + || find "$dir" -exec LD_LIBRARY_PATH=/system/lib64 $i chcon $2 {} +) 2>/dev/null;
        done || find "$dir" -exec chcon -h $2 '{}' + || find "$dir" -exec chcon $2 '{}' +;
      ;;
      *) ;;
    esac;
    shift 2;
  done;
}

ui_print() {
  until [ ! "$1" ]; do
    echo "ui_print $1
      ui_print" >> $OUTFD;
    shift;
  done;
}

unmount() { umount "$1"; }

write_raw_image() { dd if="$1" of="$2"; }

# Script start

ui_print " ";
ui_print "********************************************";
ui_print "KernelSU ksu_version for Galaxy M52 5G (build_var)";
ui_print "by saadelasfur @telegram";
ui_print "Big Thanks to BlackMesa123 & RisenID";
ui_print "********************************************";

BOOTLOADER=$(getprop ro.boot.bootloader);

case $BOOTLOADER in
  "M526BRXX"*)
    ui_print "Device detected: m52xqxx";
    VARIANT=eur;
    ;;
  "M526BXX"*)
    ui_print "Device detected: m52xqins";
    VARIANT=swa;
    ;;
  "M526BPU"*)
    ui_print "Device detected: m52xqser";
    VARIANT=cis;
    ;;
  *)
    DEVICE=$(getprop ro.product.device);
    ui_print "Device detected: $DEVICE";
    ui_print "WARNING: This device is not supported. Aborting...";
    ui_print "********************************************";
    abort " ";
    ;;
esac;

if ! is_mounted "/cache" ; then
  mount -o rw,remount -t auto "/cache";
fi;
mkdir -p "$TMPDIR";
package_extract_dir "mesa" "$TMPDIR";
set_metadata_recursive "$TMPDIR" uid "0" gid "0" dmode "0755" fmode "0644";

ui_print " ";

ui_print "- Mounting /vendor...";
if [ "$BOOTMODE" = true ] ; then
  mount -o rw,remount -t auto "/vendor";
else
  if is_mounted "/vendor" ; then
    unmount "/vendor";
  fi;
  mount -w "/dev/block/bootdevice/by-name/vendor" "/vendor";
  if [ ! -d "/vendor/firmware-modem" ]; then
    ui_print "ERROR: Failed to mount /vendor";
    ui_print "Reboot to recovery and flash the zip again.";
    ui_print "********************************************";
    abort " ";
  fi;
fi;

[ -f /vendor/bin/install-recovery.sh ] && rm "/vendor/bin/install-recovery.sh";
[ -f /vendor/etc/init/vendor_flash_recovery.rc ] && rm "/vendor/etc/init/vendor_flash_recovery.rc";
[ -f /vendor/recovery-from-boot.p ] && rm "/vendor/recovery-from-boot.p";

ui_print "- Flashing boot.img...";
write_raw_image "$TMPDIR/$VARIANT/boot.img" "/dev/block/bootdevice/by-name/boot";
ui_print "- Flashing dtbo.img...";
write_raw_image "$TMPDIR/$VARIANT/dtbo.img" "/dev/block/bootdevice/by-name/dtbo";
ui_print "- Flashing vendor_boot.img...";
write_raw_image "$TMPDIR/$VARIANT/vendor_boot.img" "/dev/block/bootdevice/by-name/vendor_boot";

ui_print "- Unmounting /vendor...";
rm -r "$TMPDIR";
if [ "$BOOTMODE" = true ] ; then
  mount -o ro,remount -t auto "/vendor";
else
  unmount "/vendor";
fi;

ui_print "********************************************";
ui_print "- Flashing completed. Enjoy!";
ui_print "********************************************";
ui_print " ";
